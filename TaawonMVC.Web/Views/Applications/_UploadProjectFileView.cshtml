@using TaawonMVC.Web.Models.Common.Modals
@model TaawonMVC.Web.Models.Applications.ApplicationsViewModel
@{
    Layout = null;
}
@Html.Partial("~/Views/Shared/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(L("UploadFile")))

<div class="modal-body">

    <form name="UploadFiles" id="UploadFiles" enctype="multipart/form-data" method="post">
        @Html.AntiForgeryToken()

        <div class="row clearfix">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-sm-12">
                <div class="form-group form-float">
                    <div class="form-line">
                        <span class="help-block text-muted small-font">Restoration Level</span>
                        @Html.RadioButton("RestorationLevel", 0, new { id = "status1", @checked = true })
                        @Html.Label("status1", "Before Restoration")

                        @Html.RadioButton("RestorationLevel", 1, new { id = "status2" })
                        @Html.Label("status2", "During Restoration")
                        
                        @Html.RadioButton("RestorationLevel", 2, new { id = "status3" })
                        @Html.Label("status3", "After Restoration")
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-12">
                <div class="form-group form-float">
                    <div class="form-line">
                        @Html.LabelFor(model => model.files)
                        @Html.TextBoxFor(model => model.files, "", new { @type = "file", @multiple = "multiple", @id = "datafile" })
                        @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row clearfix">
            <div class="col-sm-12">
                <div class="form-group form-float">
                    <div class="form-line">
                        <button type="button" class="btn btn-default close-button waves-effect" data-dismiss="modal">@L("Cancel")</button>
                        <button type="button" name="submitUploadFile" id="submitUploadFile" onclick="ProjectUploadShowFiles()" class="btn btn-primary ">Upload</button>
                        <button type="button" name="showUploadFile" id="showUploadFile" onclick="ProjectShowUploadedFilesFunction()" class="btn btn-primary ">Show Files</button>

                    </div>
                    <input name="projectId" id="projectId" type="hidden" value="@Model.ProjectId" />
                </div>
            </div>
        </div>
    </form>

    <div id="progress" style="display: none">
        <div id="bar">File Uploaded Successfuly</div>
    </div>
    <br />
    <div id="ShowProjectFiles">

    </div>
    <div id="status"></div>



</div>
<script src="~/Views/Applications/Index.js"></script>
